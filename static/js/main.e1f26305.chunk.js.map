{"version":3,"sources":["tictactoe.js","GameBoard.js","App.js","Flex.js","index.js"],"names":["TicTacToe","arr","turn","text","item","count","GameBoard","props","useState","setArr","setTurn","isFull","setIsFull","resultRef","useRef","winRef","useEffect","full","every","logic","current","innerText","clickHandler","e","prevState","target","id","boardItems","map","idx","className","onClick","Math","random","style","display","justifyContent","width","ref","App","window","location","reload","Flex","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f26305.chunk.js","sourcesContent":["const TicTacToe = (arr,turn)=>{\n    let text = turn?'X':'O'\n    let horizonatalCheck = [[0,1,2],[3,4,5],[6,7,8]]\n    let verticalCheck = [[0,3,6],[1,4,7],[2,5,8]]\n    let diagonalCheck = [[0,4,8],[2,4,6]]\n    for(let item of horizonatalCheck){\n        let count = 0\n        for(let idx of item){\n            if(arr[idx]===text){\n                count++\n            }\n        }\n        if(count===3){\n            return true\n        }\n    }\n    for(let item of verticalCheck){\n        let count = 0\n        for(let idx of item){\n            if(arr[idx]===text){\n                count++\n            }\n        }\n\n        if(count===3){\n            return true\n        }\n    }\n    for(let item of diagonalCheck){\n        let count = 0\n        for(let idx of item){\n            if(arr[idx]===text){\n                count++\n            }\n        }\n\n        if(count===3){\n            return true\n        }\n    }\n    return false\n}\nexport default TicTacToe","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./GameBoard.css\";\nimport TicTacToe from \"./tictactoe\";\n\nfunction GameBoard(props) {\n  const [arr, setArr] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [turn, setTurn] = useState(true);\n  const [isFull, setIsFull] = useState(false);\n  let resultRef = useRef(null);\n  let winRef = useRef(null);\n\n  useEffect(() => {\n    let full = arr.every((item) => item === \"X\" || item === \"O\");\n    // console.log(arr,\"in effect\")\n    let logic = TicTacToe(arr, !turn);\n    // console.log(logic)\n    if (logic) {\n      // console.log(logic,\"in logic\")\n      setIsFull(true);\n    }\n    if (!logic && full) {\n      // console.log(logic,'in 2nd logic')\n      winRef.current.innerText = `It was a draw`;\n      setIsFull(true);\n    }\n  }, [turn,arr]);\n\n  const clickHandler = (e) => {\n    if (!isFull) {\n      setArr((prevState) => {\n        if (e.target.innerText === \"\") {\n          let text = turn ? \"X\" : \"O\";\n          resultRef.current.innerText = `Turn = ${!turn ? \"X\" : \"O\"}`;\n          prevState[e.target.id] = text;\n          e.target.innerText = text;\n          setTurn((prevState) => !prevState);\n          let logic = TicTacToe(arr, turn);\n          if (logic) {\n            winRef.current.innerText = `${turn ? \"X\" : \"O\"} won the match`;\n            setIsFull(true);\n          }\n          return prevState;\n        } else {\n          return prevState;\n        }\n      });\n    }\n  };\n  let boardItems = arr.map((item, idx) => {\n    return (\n      <div\n        className=\"board-item\"\n        id={idx}\n        key={Math.random() + idx}\n        onClick={clickHandler}\n      >\n        {item}\n      </div>\n    );\n  });\n  return (\n    <>\n      <div className={\"board \" + props.className}>{boardItems}</div>\n      <div\n        className=\"status\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"500px\",\n        }}\n      >\n        <h1 ref={resultRef}>Turn = X</h1>\n        <h1 ref={winRef}>Playing</h1>\n      </div>\n    </>\n  );\n}\n\nexport default GameBoard;\n","import './App.css';\nimport GameBoard from './GameBoard';\n\nfunction App() {\n  \n  let resetGame = ()=>{\n    window.location.reload()\n  }\n\n  return (\n    <div className='main'>\n      <button className='btn' onClick={resetGame}> Restart</button>\n      <GameBoard />\n    </div>\n  )\n}\n\nexport default App;\n","import React from \"react\";\n\nfunction Flex(props) {\n  return (<div className={'flex '+props.className}>\n      {props.children}\n  </div>)\n}\n\nexport default Flex;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Flex from './Flex';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Flex>\n    <App /> \n    </Flex>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}